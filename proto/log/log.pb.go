// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/log/log.proto

package proto_log

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogType int32

const (
	LogType_Info   LogType = 0
	LogType_Warn   LogType = 1
	LogType_Error  LogType = 2
	LogType_Danger LogType = 3
	LogType_Debug  LogType = 4
)

var LogType_name = map[int32]string{
	0: "Info",
	1: "Warn",
	2: "Error",
	3: "Danger",
	4: "Debug",
}

var LogType_value = map[string]int32{
	"Info":   0,
	"Warn":   1,
	"Error":  2,
	"Danger": 3,
	"Debug":  4,
}

func (x LogType) String() string {
	return proto.EnumName(LogType_name, int32(x))
}

func (LogType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c672f68bc74af5b1, []int{0}
}

type LogMsg struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	NodeIP               string   `protobuf:"bytes,2,opt,name=NodeIP,proto3" json:"NodeIP,omitempty"`
	Level                LogType  `protobuf:"varint,3,opt,name=Level,proto3,enum=proto.log.LogType" json:"Level,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogMsg) Reset()         { *m = LogMsg{} }
func (m *LogMsg) String() string { return proto.CompactTextString(m) }
func (*LogMsg) ProtoMessage()    {}
func (*LogMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c672f68bc74af5b1, []int{0}
}

func (m *LogMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogMsg.Unmarshal(m, b)
}
func (m *LogMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogMsg.Marshal(b, m, deterministic)
}
func (m *LogMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogMsg.Merge(m, src)
}
func (m *LogMsg) XXX_Size() int {
	return xxx_messageInfo_LogMsg.Size(m)
}
func (m *LogMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_LogMsg.DiscardUnknown(m)
}

var xxx_messageInfo_LogMsg proto.InternalMessageInfo

func (m *LogMsg) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *LogMsg) GetNodeIP() string {
	if m != nil {
		return m.NodeIP
	}
	return ""
}

func (m *LogMsg) GetLevel() LogType {
	if m != nil {
		return m.Level
	}
	return LogType_Info
}

func (m *LogMsg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.log.LogType", LogType_name, LogType_value)
	proto.RegisterType((*LogMsg)(nil), "proto.log.LogMsg")
}

func init() { proto.RegisterFile("proto/log/log.proto", fileDescriptor_c672f68bc74af5b1) }

var fileDescriptor_c672f68bc74af5b1 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0xc9, 0x4f, 0x07, 0x61, 0x3d, 0x30, 0x4f, 0x88, 0x13, 0x4c, 0xe9, 0xe5, 0xe4,
	0xa7, 0x2b, 0xd5, 0x70, 0xb1, 0xf9, 0xe4, 0xa7, 0xfb, 0x16, 0xa7, 0x0b, 0x89, 0x71, 0xb1, 0xf9,
	0xe5, 0xa7, 0xa4, 0x7a, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x70, 0xf1,
	0x00, 0x09, 0x26, 0x24, 0xf1, 0x00, 0x21, 0x0d, 0x2e, 0x56, 0x9f, 0xd4, 0xb2, 0xd4, 0x1c, 0x09,
	0x66, 0x05, 0x46, 0x0d, 0x3e, 0x23, 0x21, 0x3d, 0xb8, 0xa1, 0x7a, 0x3e, 0xf9, 0xe9, 0x21, 0x95,
	0x05, 0xa9, 0x41, 0x10, 0x05, 0x42, 0x12, 0x5c, 0xec, 0xc9, 0xf9, 0x79, 0x25, 0xa9, 0x79, 0x25,
	0x12, 0x2c, 0x60, 0x23, 0x60, 0x5c, 0x2d, 0x7b, 0x2e, 0x76, 0xa8, 0x5a, 0x21, 0x0e, 0x2e, 0x16,
	0xcf, 0xbc, 0xb4, 0x7c, 0x01, 0x06, 0x10, 0x2b, 0x3c, 0xb1, 0x28, 0x4f, 0x80, 0x51, 0x88, 0x93,
	0x8b, 0xd5, 0xb5, 0xa8, 0x28, 0xbf, 0x48, 0x80, 0x49, 0x88, 0x8b, 0x8b, 0xcd, 0x25, 0x31, 0x2f,
	0x3d, 0xb5, 0x48, 0x80, 0x19, 0x24, 0xec, 0x92, 0x9a, 0x54, 0x9a, 0x2e, 0xc0, 0x92, 0xc4, 0x06,
	0xb6, 0xd4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x31, 0xdf, 0x48, 0xe7, 0x00, 0x00, 0x00,
}
